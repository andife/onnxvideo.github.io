<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>https://andife.github.io/</title><link href="/" rel="alternate"></link><link href="/feeds/event_undefined.atom.xml" rel="self"></link><id>/</id><updated>2021-10-24T00:00:00+00:00</updated><entry><title>Architecture/Infrastructure SIG Update</title><link href="/undefined/architectureinfrastructure-sig-update.html" rel="alternate"></link><published>2021-10-24T00:00:00+00:00</published><updated>2021-10-24T00:00:00+00:00</updated><author><name>Ashwini Khade (Microsoft)</name></author><id>tag:,2021-10-24:undefined/architectureinfrastructure-sig-update.html</id><summary type="html"></summary><category term="sig"></category></entry><entry><title>Ascend CANN and ONNX : inference interoperability for better performance</title><link href="/undefined/ascend-cann-and-onnx-inference-interoperability-for-better-performance.html" rel="alternate"></link><published>2021-10-24T00:00:00+00:00</published><updated>2021-10-24T00:00:00+00:00</updated><author><name>Zhipeng Huang (Huawei)</name></author><id>tag:,2021-10-24:undefined/ascend-cann-and-onnx-inference-interoperability-for-better-performance.html</id><summary type="html"></summary><category term="cann"></category><category term="interoperability"></category><category term="performance"></category></entry><entry><title>Auditing considerations for ONNX models and benchmarking with QuSandbox</title><link href="/undefined/auditing-considerations-for-onnx-models-and-benchmarking-with-qusandbox.html" rel="alternate"></link><published>2021-10-24T00:00:00+00:00</published><updated>2021-10-24T00:00:00+00:00</updated><author><name>Sri Krishnamurthy (QuantUniversity)</name></author><id>tag:,2021-10-24:undefined/auditing-considerations-for-onnx-models-and-benchmarking-with-qusandbox.html</id><summary type="html"></summary><category term="auditing"></category><category term="onnx"></category></entry><entry><title>Boosting PaddlePaddle Deployment in Industry</title><link href="/undefined/boosting-paddlepaddle-deployment-in-industry.html" rel="alternate"></link><published>2021-10-24T00:00:00+00:00</published><updated>2021-10-24T00:00:00+00:00</updated><author><name>Jiajun Jiang (Baidu)</name></author><id>tag:,2021-10-24:undefined/boosting-paddlepaddle-deployment-in-industry.html</id><summary type="html"></summary><category term="paddle"></category></entry><entry><title>Converters SIG Update</title><link href="/undefined/converters-sig-update.html" rel="alternate"></link><published>2021-10-24T00:00:00+00:00</published><updated>2021-10-24T00:00:00+00:00</updated><author><name>Chin Huang (IBM)</name></author><id>tag:,2021-10-24:undefined/converters-sig-update.html</id><summary type="html"></summary><category term="sig"></category></entry><entry><title>Intel Neural Compressor: A Scalable Quantization Tool for ONNX Models</title><link href="/undefined/intel-neural-compressor-a-scalable-quantization-tool-for-onnx-models.html" rel="alternate"></link><published>2021-10-24T00:00:00+00:00</published><updated>2021-10-24T00:00:00+00:00</updated><author><name>Mengni Wang (Intel)</name></author><id>tag:,2021-10-24:undefined/intel-neural-compressor-a-scalable-quantization-tool-for-onnx-models.html</id><summary type="html"></summary><category term="Intel"></category><category term="INC"></category><category term="Quantization"></category></entry><entry><title>Intel OneAPI software stack: ONNX Support for xPU hardware</title><link href="/undefined/intel-oneapi-software-stack-onnx-support-for-xpu-hardware.html" rel="alternate"></link><published>2021-10-24T00:00:00+00:00</published><updated>2021-10-24T00:00:00+00:00</updated><author><name>Kiefer Kuah (Intel)</name></author><id>tag:,2021-10-24:undefined/intel-oneapi-software-stack-onnx-support-for-xpu-hardware.html</id><summary type="html"></summary><category term="intel"></category><category term="xpu"></category></entry><entry><title>Model Zoo / Tutorials SIG Update</title><link href="/undefined/model-zoo-tutorials-sig-update.html" rel="alternate"></link><published>2021-10-24T00:00:00+00:00</published><updated>2021-10-24T00:00:00+00:00</updated><author><name>Wenbing Li (Microsoft)</name></author><id>tag:,2021-10-24:undefined/model-zoo-tutorials-sig-update.html</id><summary type="html"></summary><category term="zoo"></category><category term="tutorials"></category></entry><entry><title>ONNX and the AI on IBM Z client journey</title><link href="/undefined/onnx-and-the-ai-on-ibm-z-client-journey.html" rel="alternate"></link><published>2021-10-24T00:00:00+00:00</published><updated>2021-10-24T00:00:00+00:00</updated><author><name>Elpida Tzortzatos (IBM)</name></author><id>tag:,2021-10-24:undefined/onnx-and-the-ai-on-ibm-z-client-journey.html</id><summary type="html"></summary><category term="ibm"></category></entry><entry><title>ONNX as standard format for institution with legacy</title><link href="/undefined/onnx-as-standard-format-for-institution-with-legacy.html" rel="alternate"></link><published>2021-10-24T00:00:00+00:00</published><updated>2021-10-24T00:00:00+00:00</updated><author><name>Haixuan Xavier Tao ( Banque France)</name></author><id>tag:,2021-10-24:undefined/onnx-as-standard-format-for-institution-with-legacy.html</id><summary type="html"></summary><category term="standard"></category></entry><entry><title>ONNX Runtime Web: running your machine learning model in browser</title><link href="/undefined/onnx-runtime-web-running-your-machine-learning-model-in-browser.html" rel="alternate"></link><published>2021-10-24T00:00:00+00:00</published><updated>2021-10-24T00:00:00+00:00</updated><author><name>Emma Ning (Microsoft)</name></author><id>tag:,2021-10-24:undefined/onnx-runtime-web-running-your-machine-learning-model-in-browser.html</id><summary type="html"></summary><category term="runtime"></category><category term="browser"></category></entry><entry><title>Operators SIG Update</title><link href="/undefined/operators-sig-update.html" rel="alternate"></link><published>2021-10-24T00:00:00+00:00</published><updated>2021-10-24T00:00:00+00:00</updated><author><name>Michal Karzynski (Intel)</name></author><id>tag:,2021-10-24:undefined/operators-sig-update.html</id><summary type="html"></summary><category term="sig"></category></entry><entry><title>Place of ONNX in OpenVINO ecosystem</title><link href="/undefined/place-of-onnx-in-openvino-ecosystem.html" rel="alternate"></link><published>2021-10-24T00:00:00+00:00</published><updated>2021-10-24T00:00:00+00:00</updated><author><name>Sergey Lyalin (Intel)</name></author><id>tag:,2021-10-24:undefined/place-of-onnx-in-openvino-ecosystem.html</id><summary type="html"></summary><category term="Openvino"></category></entry><entry><title>Pre-processing WG</title><link href="/undefined/pre-processing-wg.html" rel="alternate"></link><published>2021-10-24T00:00:00+00:00</published><updated>2021-10-24T00:00:00+00:00</updated><author><name>Joaquin Anton (Nvidia)</name></author><id>tag:,2021-10-24:undefined/pre-processing-wg.html</id><summary type="html"></summary><category term="Pre-processing"></category><category term="wg"></category></entry><entry><title>SteeringCommitteeUpdates: ONNX Steering Committee Welcome, Progress, Roadmap, Release</title><link href="/undefined/steeringcommitteeupdates-onnx-steering-committee-welcome-progress-roadmap-release.html" rel="alternate"></link><published>2021-10-24T00:00:00+00:00</published><updated>2021-10-24T00:00:00+00:00</updated><author><name>Prasanth</name></author><id>tag:,2021-10-24:undefined/steeringcommitteeupdates-onnx-steering-committee-welcome-progress-roadmap-release.html</id><summary type="html"></summary><category term="Steering Committee"></category><category term="Roadmap"></category></entry><entry><title>Triton &amp; ONNX Runtime</title><link href="/undefined/triton-onnx-runtime.html" rel="alternate"></link><published>2021-10-24T00:00:00+00:00</published><updated>2021-10-24T00:00:00+00:00</updated><author><name>Ashwini Khade (Microsoft)</name></author><id>tag:,2021-10-24:undefined/triton-onnx-runtime.html</id><summary type="html"></summary><category term="Triton"></category><category term="onnx"></category><category term="Runtime"></category></entry><entry><title>TVM: Dynamic shapes, control flow, and quantization with a compiler</title><link href="/undefined/tvm-dynamic-shapes-control-flow-and-quantization-with-a-compiler.html" rel="alternate"></link><published>2021-10-24T00:00:00+00:00</published><updated>2021-10-24T00:00:00+00:00</updated><author><name>Jason Knight (OctoML)</name></author><id>tag:,2021-10-24:undefined/tvm-dynamic-shapes-control-flow-and-quantization-with-a-compiler.html</id><summary type="html"></summary><category term="TVM"></category></entry></feed>